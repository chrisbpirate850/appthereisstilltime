rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      // Allow read/write to own user document
      allow read, write: if isOwner(userId);

      // User preferences subcollection
      match /preferences/{document=**} {
        allow read, write: if isOwner(userId);
      }

      // Trial state subcollection (Phase 2)
      // Anonymous users can read/write their own trial state
      match /trial/{document=**} {
        allow read, write: if isOwner(userId);
      }
    }

    // Sessions collection
    match /sessions/{sessionId} {
      // Allow users to create their own sessions
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;

      // Allow users to read their own sessions
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;

      // No updates or deletes (sessions are immutable)
      allow update, delete: if false;
    }

    // Reflections collection
    match /reflections/{reflectionId} {
      // Allow users to create their own reflections
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;

      // Allow users to read their own reflections
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;

      // Allow users to update/delete their own reflections
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    // Custom hourglass requests
    match /customHourglasses/{requestId} {
      // Allow users to create their own requests
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;

      // Allow users to read their own requests
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;

      // Cloud Functions can update (status, videoUrl, etc.)
      allow update: if request.auth != null && resource.data.userId == request.auth.uid;

      // No deletes
      allow delete: if false;
    }

    // Subscriptions (managed by Cloud Functions/Stripe)
    match /subscriptions/{userId} {
      // Users can read their own subscription
      allow read: if isOwner(userId);

      // Only Cloud Functions can write
      allow write: if false;
    }

    // Stripe customers collection (for Stripe extension)
    match /customers/{userId} {
      // Users can read their own customer data
      allow read: if isOwner(userId);

      // Checkout sessions subcollection
      match /checkout_sessions/{sessionId} {
        // Users can create their own checkout sessions
        allow create: if isOwner(userId);
        // Users can read their own checkout sessions (to get the URL)
        allow read: if isOwner(userId);
      }

      // Subscriptions subcollection (managed by Stripe extension)
      match /subscriptions/{subscriptionId} {
        // Users can read their own subscriptions
        allow read: if isOwner(userId);
        // Only Stripe extension can write
        allow write: if false;
      }

      // Payments subcollection (managed by Stripe extension)
      match /payments/{paymentId} {
        // Users can read their own payments
        allow read: if isOwner(userId);
        // Only Stripe extension can write
        allow write: if false;
      }
    }

    // Products collection (read-only for all authenticated users)
    match /products/{productId} {
      allow read: if request.auth != null;

      // Prices subcollection
      match /prices/{priceId} {
        allow read: if request.auth != null;
      }
    }

    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
